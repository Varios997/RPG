<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup das variaveis
grav = 0.6;
hsp_carry = 0;
hsp = 0;
vsp = 0;
jumpspeed = 7.5;
movespeed = 6;
image_speed = 0;
imgsp = 0.3;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Input

right = (keyboard_check(vk_right))
left = (keyboard_check(vk_left));
jump = (keyboard_check(vk_space));

if(vsp &lt; 10) vsp += grav;
hsp = movespeed;
if(right) 
{
    sprite_index = spr_fredright;
    image_speed = imgsp;
    if(place_meeting(x+hsp, y, (obj_standardplatform)))
    {
        while(!place_meeting(x+ sign(hsp), y, obj_standardplatform))
        {
            x += sign(hsp);
        }
    hsp = 0;
    }
    x += hsp;
}
if(left) 
{
    image_speed = imgsp;
    sprite_index = spr_fredleft;
    if(place_meeting(x-hsp, y, (obj_standardplatform)))
    {
        while(!place_meeting(x- sign(hsp), y, obj_standardplatform))
        {
            x -= sign(hsp);
        }
    hsp = 0;
    }
    x -= hsp;
}

if(jump)
{
    if(place_meeting(x, y+1, obj_standardplatform))
    {
        vsp = -jumpspeed;
    }
}


if(place_meeting(x, y+vsp, (obj_standardplatform)))
{
    while(!place_meeting(x, y+ sign(vsp), obj_standardplatform))
    {
        y += sign(vsp);
    }
    vsp = 0;
    if(sprite_index = spr_fredjumpright){sprite_index = spr_fredright;}
    if(sprite_index = spr_fredjumpleft){sprite_index = spr_fredleft;}
}
y += vsp;

if(!right &amp;&amp; !left)
{
    image_index = 0;
    image_speed = 0;
}
if(vsp != 0)
{
     if(sprite_index = spr_fredright){sprite_index = spr_fredjumpright;}
     if(sprite_index = spr_fredleft){sprite_index = spr_fredjumpleft;}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
